import React, { useEffect, useState } from 'react';
import { Modal, Typography, Input, message, Button, Space } from 'antd';

interface InviteModalProps {
  visible: boolean;
  onClose: () => void;
}

export const InviteModal: React.FC<InviteModalProps> = ({ visible, onClose }) => {
  const [inviteCode, setInviteCode] = useState('');

  useEffect(() => {
    if (visible) {
      // üì° –ü—Ä–∏–º–µ—Ä –∑–∞–ø—Ä–æ—Å–∞ –∫ API
      /*
      fetch('/api/group/invite-code')
        .then(res => res.json())
        .then(data => {
          setInviteCode(data.code);
        })
        .catch(() => {
          message.error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–æ–¥ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è');
        });
      */

      // üß™ –ú–æ–∫
      setInviteCode('ABC123');
    }
  }, [visible]);

  const handleCopy = async () => {
    try {
      await navigator.clipboard.writeText(inviteCode);
      message.success('–ö–æ–¥ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω');
    } catch (err) {
      message.error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å');
    }
  };

  return (
    <Modal
      title="–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É"
      open={visible}
      onCancel={onClose}
      footer={null}
      centered
    >
      <Typography.Paragraph>
        –û—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, —á—Ç–æ–±—ã –æ–Ω –º–æ–≥ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –≤–∞—à–µ–π –≥—Ä—É–ø–ø–µ:
      </Typography.Paragraph>

      <Space.Compact style={{ width: '100%' }}>
        <Input value={inviteCode} readOnly />
        <Button onClick={handleCopy}>–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å</Button>
      </Space.Compact>
    </Modal>
  );
};
